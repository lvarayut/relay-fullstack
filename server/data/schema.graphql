schema {
  query: Query
}

type Course implements Node {
  id: ID!
  coursenum: String
}

type CourseConnection {
  pageInfo: PageInfo!
  edges: [CourseEdge]
}

type CourseEdge {
  node: Course
  cursor: String!
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  node(id: ID!): Node
  viewer: User
}

type User implements Node {
  id: ID!
  courses(after: String, first: Int, before: String, last: Int): CourseConnection
  username: String
  website: String
}
